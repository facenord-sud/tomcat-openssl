<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<!-- By default, only the Clean and Build commands use this build script. -->
<!-- Commands such as Run, Debug, and Test only use this build script if -->
<!-- the Compile on Save feature is turned off for the project. -->
<!-- You can turn off the Compile on Save (or Deploy on Save) setting -->
<!-- in the project's Project Properties dialog box.-->
<project name="tomcat-openssl" basedir=".">
    <description>Builds, tests, and deploys the project tomcat-openssl.</description>
    <loadproperties srcFile="config.properties"/>
    <property name="jar.path" value="${dist}/${jar.name}-${version}.jar"/>
    <path id="tomcat.cp">
        <pathelement location="${tomcat.classpath}"/>
    </path>
    <path id="tomcat.test.cp">
        <pathelement location="${tomcat.classpath}"/>
        <pathelement location="${tomcat.test.classpath}"/>
        <pathelement location="${lib.junit}"/>
        <pathelement location="${lib.hamcrest}"/>
    </path>
    <target name="prepare">
        <mkdir dir="${build.java}"/>
        <mkdir dir="${dist}"/>
    </target>
    <target name="compile" depends="prepare">
        <javac destdir="${build.java}" srcdir="${java.src}" classpathref="tomcat.cp"></javac>
    </target>
    <target name="clean">
        <delete includeEmptyDirs="true">
            <fileset dir="${build.dir}"/>
        </delete>
        <delete includeEmptyDirs="true">
            <fileset dir="${dist}"/>
        </delete>
        <delete includeEmptyDirs="true">
            <fileset dir="output"/>
        </delete>
    </target>
    <target name="package">
        <jar destfile="${jar.path}" basedir="${build.java}"/>
    </target>
    <target name="build" depends="compile, package"/>
    <target name="deploy" depends="build">
        <copy file="${jar.path}" toDir="${tomcat.lib}" overwrite="true"/>
        <copy file="resources/server.xml" toDir="${tomcat.conf}" overwrite="true"/>
        <copy file="resources/keystore" toDir="${tomcat.conf}" overwrite="true" force="true"/>
    </target>
    <target name="compile-test" depends="compile">
        <mkdir dir="${build.test}"/>
        <mkdir dir="${report.dir}"/>
        <javac destdir="${build.test}" srcdir="${java.test}" classpathref="tomcat.test.cp"/>
        <copy todir="output/build">
            <fileset dir="../tomcat/output/build"/>
        </copy>
    </target>
    <target name="test" depends="compile-test">
        <junit>
            <classpath refid="tomcat.test.cp" />
            <classpath>
                <pathelement location="${build.test}"/>
            </classpath>
            <formatter type="xml" />
            <formatter type="plain" />
            <formatter type="brief" usefile="false" />
 
            <batchtest fork="yes" todir="${report.dir}">
                <fileset dir="${java.test}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>
</project>
